name: Deploy to AWS CloudFront

on:
  push:
    branches:
      - main
  workflow_dispatch: # 수동 트리거 허용

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  deploy:
    name: Build and Deploy to S3/CloudFront
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build
        env:
          # .env.production 파일이 이미 있으므로 자동으로 사용됨
          # 필요시 추가 환경 변수 주입 가능
          VITE_API_URL: https://api.testcase.run/api
          VITE_ENV: production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync files to S3 (static assets with long cache)
        run: |
          aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "public, max-age=31536000, immutable" \
            --exclude "index.html" \
            --exclude "*.html"

      - name: Upload index.html (no cache)
        run: |
          aws s3 cp dist/index.html s3://${{ secrets.S3_BUCKET_NAME }}/index.html \
            --cache-control "public, max-age=0, must-revalidate" \
            --content-type "text/html"

      - name: Upload other HTML files (short cache)
        run: |
          find dist -name "*.html" -not -name "index.html" -type f | while read file; do
            aws s3 cp "$file" s3://${{ secrets.S3_BUCKET_NAME }}/"${file#dist/}" \
              --cache-control "public, max-age=3600, must-revalidate" \
              --content-type "text/html"
          done

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment summary
        run: |
          echo "==================================="
          echo "Deployment completed successfully!"
          echo "==================================="
          echo "S3 Bucket: ${{ secrets.S3_BUCKET_NAME }}"
          echo "CloudFront Distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          echo "Region: ${{ env.AWS_REGION }}"
          echo "Build completed at: $(date)"
          echo "==================================="

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "Deployment succeeded"
          else
            echo "Deployment failed"
            exit 1
          fi
