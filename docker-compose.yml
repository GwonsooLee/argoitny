services:
  mysql:
    image: mysql:8.0
    container_name: algoitny-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-algoitny}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - algoitny-network

  migration-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algoitny-migration-init
    environment:
      SECRET_KEY: ${SECRET_KEY:-django-insecure-dev-key-change-in-production}
      DEBUG: ${DEBUG:-True}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,backend}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-rootpassword}
      DB_NAME: ${DB_NAME:-algoitny}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-your-google-client-id}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-your-google-client-secret}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-your-gemini-api-key}
      CODE_EXECUTION_TIMEOUT: ${CODE_EXECUTION_TIMEOUT:-5}
      USE_SECRETS_MANAGER: ${USE_SECRETS_MANAGER:-false}
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/.venv
    networks:
      - algoitny-network
    command: sh -c "python manage.py migrate"
    restart: "no"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algoitny-backend
    environment:
      SECRET_KEY: ${SECRET_KEY:-django-insecure-dev-key-change-in-production}
      DEBUG: ${DEBUG:-True}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,backend}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-rootpassword}
      DB_NAME: ${DB_NAME:-algoitny}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-your-google-client-id}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-your-google-client-secret}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-your-gemini-api-key}
      CODE_EXECUTION_TIMEOUT: ${CODE_EXECUTION_TIMEOUT:-5}
      USE_SECRETS_MANAGER: ${USE_SECRETS_MANAGER:-false}
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      migration-init:
        condition: service_completed_successfully
    volumes:
      - ./backend:/app
      - /app/.venv
    networks:
      - algoitny-network
    command: sh -c "python manage.py runserver 0.0.0.0:8000"

  frontend:
    image: node:20-alpine
    container_name: algoitny-frontend
    working_dir: /app
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-your-google-client-id}
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - algoitny-network
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

volumes:
  mysql_data:

networks:
  algoitny-network:
    driver: bridge
