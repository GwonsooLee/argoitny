services:
  localstack:
    image: localstack/localstack:3.0.2
    container_name: algoitny-localstack
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=sqs,dynamodb,s3
      - DEBUG=1
      - DEFAULT_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - HOSTNAME_EXTERNAL=localstack
      - LAMBDA_EXECUTOR=local
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - algoitny-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5


  dynamodb-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algoitny-dynamodb-init
    env_file:
      - ./backend/.env
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
      LOCALSTACK_URL: http://localstack:4566
    depends_on:
      localstack:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/.venv
    networks:
      - algoitny-network
    command: sh -c "python scripts/init_dynamodb.py && python scripts/seed_default_plans.py"
    restart: "no"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algoitny-backend
    env_file:
      - ./backend/.env
    environment:
      ENVIRONMENT: development
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
      LOCALSTACK_URL: http://localstack:4566
      GUNICORN_WORKERS: "4"
      GUNICORN_LOG_LEVEL: "info"
      ALLOWED_HOSTS: "localhost,127.0.0.1,0.0.0.0,10.10.110.90,10.10.10.93"
    ports:
      - "8000:8000"
    depends_on:
      localstack:
        condition: service_healthy
      dynamodb-init:
        condition: service_completed_successfully
    volumes:
      - ./backend:/app
      - /app/.venv
      - backend_logs:/app/logs
      - backend_tmp:/app/tmp
    networks:
      - algoitny-network
    command: sh -c "gunicorn config.asgi:application -c gunicorn.conf.py"

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algoitny-celery-worker
    env_file:
      - ./backend/.env
    environment:
      ENVIRONMENT: development
      DJANGO_SETTINGS_MODULE: config.settings
      CONFIG_FILE: /app/config/config.yaml
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
      LOCALSTACK_URL: http://localstack:4566
    depends_on:
      localstack:
        condition: service_healthy
      dynamodb-init:
        condition: service_completed_successfully
    volumes:
      - ./backend:/app
      - /app/.venv
    networks:
      - algoitny-network
    command: bash /app/scripts/start_celery.sh
    healthcheck:
      disable: true
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 2G

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: algoitny-dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - algoitny-network

  frontend:
    image: node:20-alpine
    container_name: algoitny-frontend
    working_dir: /app
    env_file:
      - ./frontend/.env
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - algoitny-network
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

volumes:
  localstack_data:
  backend_logs:
  backend_tmp:

networks:
  algoitny-network:
    driver: bridge
