services:
  mysql:
    image: mysql:8.0
    container_name: algoitny-mysql
    env_file:
      - ./backend/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - algoitny-network

  redis:
    image: redis:7-alpine
    container_name: algoitny-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - algoitny-network

  migration-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algoitny-migration-init
    env_file:
      - ./backend/.env
    environment:
      DB_HOST: mysql
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/.venv
    networks:
      - algoitny-network
    command: sh -c "python manage.py migrate"
    restart: "no"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algoitny-backend
    env_file:
      - ./backend/.env
    environment:
      DB_HOST: mysql
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      migration-init:
        condition: service_completed_successfully
    volumes:
      - ./backend:/app
      - /app/.venv
    networks:
      - algoitny-network
    command: sh -c "gunicorn config.asgi:application -c gunicorn.conf.py"

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algoitny-celery-worker
    env_file:
      - ./backend/.env
    environment:
      DB_HOST: mysql
      REDIS_HOST: redis
      DJANGO_SETTINGS_MODULE: config.settings
      CONFIG_FILE: /app/config/config.yaml
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      migration-init:
        condition: service_completed_successfully
    volumes:
      - ./backend:/app
      - /app/.venv
    networks:
      - algoitny-network
    command: bash /app/start_celery.sh

  frontend:
    image: node:20-alpine
    container_name: algoitny-frontend
    working_dir: /app
    env_file:
      - ./frontend/.env
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - algoitny-network
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

volumes:
  mysql_data:

networks:
  algoitny-network:
    driver: bridge
