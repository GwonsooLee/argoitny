# Production values for algoitny-backend
# Override default values.yaml for production environment

global:
  environment: production
  region: ap-northeast-2

image:
  repository: YOUR_ACCOUNT_ID.dkr.ecr.ap-northeast-2.amazonaws.com/algoitny
  pullPolicy: Always
  tag: "v1.0.0"

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::YOUR_ACCOUNT_ID:role/eks-algoitny-eks-cluster-algoitny-backend"
  name: "algoitny-backend-sa"

externalSecrets:
  enabled: true
  backendType: secretsManager
  region: ap-northeast-2
  secretName: algoitny-backend-secrets
  awsSecretsManager:
    secretKey: algoitny/backend/prod
  refreshInterval: 1h

gunicorn:
  enabled: true
  replicaCount: 3

  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 4Gi

  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  env:
    DJANGO_SETTINGS_MODULE: config.settings_production
    WORKERS: "8"
    TIMEOUT: "120"

celeryWorker:
  enabled: true
  replicaCount: 3

  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 4Gi

  keda:
    enabled: true
    minReplicas: 3
    maxReplicas: 30
    pollingInterval: 30
    cooldownPeriod: 300
    triggers:
      - type: redis
        metadata:
          address: your-redis-primary.xxxxx.ng.0001.apn2.cache.amazonaws.com:6379
          listName: celery
          listLength: "10"
          databaseIndex: "0"

  env:
    CELERY_CONCURRENCY: "8"
    CELERY_MAX_TASKS_PER_CHILD: "100"

celeryBeat:
  enabled: true
  replicaCount: 1

  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

ingress:
  enabled: true
  className: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:ap-northeast-2:YOUR_ACCOUNT_ID:certificate/YOUR_CERT_ID"
    alb.ingress.kubernetes.io/healthcheck-path: /api/health/
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/wafv2-acl-arn: "arn:aws:wafv2:ap-northeast-2:YOUR_ACCOUNT_ID:regional/webacl/algoitny-waf/YOUR_WAF_ID"
    alb.ingress.kubernetes.io/security-groups: sg-xxxxxxxxx
    alb.ingress.kubernetes.io/tags: Environment=production,Service=algoitny-backend,ManagedBy=helm

  hosts:
    - host: api.testcase.run
      paths:
        - path: /
          pathType: Prefix

  tls:
    - secretName: algoitny-tls
      hosts:
        - api.testcase.run

karpenter:
  enabled: true
  provisioner:
    name: algoitny-backend-prod
    requirements:
      - key: karpenter.sh/capacity-type
        operator: In
        values: ["spot", "on-demand"]
      - key: kubernetes.io/arch
        operator: In
        values: ["amd64"]
      - key: karpenter.k8s.aws/instance-category
        operator: In
        values: ["c", "m", "r"]
      - key: karpenter.k8s.aws/instance-generation
        operator: Gt
        values: ["5"]
      - key: karpenter.k8s.aws/instance-size
        operator: In
        values: ["large", "xlarge", "2xlarge"]
    limits:
      cpu: 200
      memory: 400Gi
    ttlSecondsAfterEmpty: 30
    ttlSecondsUntilExpired: 604800  # 7 days
    consolidation:
      enabled: true
    instanceProfile: KarpenterNodeInstanceProfile-algoitny-eks-cluster
    subnetSelector:
      karpenter.sh/discovery: algoitny-eks-cluster
    securityGroupSelector:
      karpenter.sh/discovery: algoitny-eks-cluster
    tags:
      Environment: production
      ManagedBy: karpenter
      Service: algoitny-backend

config:
  DEBUG: "False"
  ALLOWED_HOSTS: "api.testcase.run"
  CORS_ALLOWED_ORIGINS: "https://testcase.run,https://www.testcase.run"
  CELERY_TASK_ALWAYS_EAGER: "False"
  CELERY_RESULT_BACKEND: "django-db"
  JUDGE0_ENDPOINT: "http://judge0-api:2358"

  # AWS Resources
  DYNAMODB_TABLE_NAME: "algoitny_main"
  AWS_STORAGE_BUCKET_NAME: "algoitny-testcases-zteapne2"

podDisruptionBudget:
  enabled: true
  minAvailable: 2

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - algoitny-backend
            - key: app.kubernetes.io/component
              operator: In
              values:
                - gunicorn
        topologyKey: kubernetes.io/hostname

tolerations:
  - key: karpenter.sh/capacity-type
    operator: Equal
    value: spot
    effect: NoSchedule
