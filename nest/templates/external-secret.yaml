{{- if .Values.externalSecrets.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ include "algoitny-backend.fullname" . }}-secretstore
  labels:
    {{- include "algoitny-backend.labels" . | nindent 4 }}
spec:
  provider:
    aws:
      service: SecretsManager
      region: {{ .Values.externalSecrets.region }}
      auth:
        jwt:
          serviceAccountRef:
            name: {{ include "algoitny-backend.serviceAccountName" . }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "algoitny-backend.fullname" . }}-external-secret
  labels:
    {{- include "algoitny-backend.labels" . | nindent 4 }}
spec:
  refreshInterval: {{ .Values.externalSecrets.refreshInterval }}
  secretStoreRef:
    name: {{ include "algoitny-backend.fullname" . }}-secretstore
    kind: SecretStore
  target:
    name: {{ .Values.externalSecrets.secretName }}
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: {{ .Values.externalSecrets.awsSecretsManager.secretKey }}
---
# Expected secret structure in AWS Secrets Manager:
# {
#   "DATABASE_URL": "mysql://user:pass@host:3306/dbname",
#   "REDIS_URL": "redis://redis-host:6379/0",
#   "CELERY_BROKER_URL": "redis://redis-host:6379/0",
#   "DJANGO_SECRET_KEY": "your-secret-key",
#   "GOOGLE_OAUTH_CLIENT_ID": "your-client-id",
#   "GOOGLE_OAUTH_CLIENT_SECRET": "your-client-secret",
#   "GOOGLE_OAUTH_REDIRECT_URI": "https://api.testcase.run/api/auth/google/callback/",
#   "GEMINI_API_KEY": "your-gemini-api-key",
#   "JUDGE0_API_KEY": "your-judge0-api-key",
#   "AWS_ACCESS_KEY_ID": "your-aws-access-key",
#   "AWS_SECRET_ACCESS_KEY": "your-aws-secret-key",
#   "AWS_STORAGE_BUCKET_NAME": "your-bucket-name",
#   "AWS_S3_REGION_NAME": "ap-northeast-2"
# }
{{- end }}
