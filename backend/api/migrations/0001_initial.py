# Generated by Django 5.2.7 on 2025-10-03 17:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("platform", models.CharField(max_length=50)),
                ("problem_id", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "problems",
                "indexes": [
                    models.Index(
                        fields=["platform", "problem_id"],
                        name="problems_platfor_abd684_idx",
                    )
                ],
                "unique_together": {("platform", "problem_id")},
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("name", models.CharField(blank=True, max_length=255)),
                ("picture", models.URLField(blank=True)),
                (
                    "google_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="api_users",
                        related_query_name="api_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="api_users",
                        related_query_name="api_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="TestCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("input", models.TextField()),
                ("output", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_cases",
                        to="api.problem",
                    ),
                ),
            ],
            options={
                "db_table": "test_cases",
                "indexes": [
                    models.Index(
                        fields=["problem"], name="test_cases_problem_eb1472_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="SearchHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_identifier",
                    models.CharField(default="anonymous", max_length=100),
                ),
                ("platform", models.CharField(max_length=50)),
                ("problem_number", models.CharField(max_length=50)),
                ("problem_title", models.CharField(max_length=255)),
                ("language", models.CharField(max_length=50)),
                ("code", models.TextField()),
                ("result_summary", models.JSONField()),
                ("passed_count", models.IntegerField()),
                ("failed_count", models.IntegerField()),
                ("total_count", models.IntegerField()),
                ("is_code_public", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_history",
                        to="api.problem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_history",
                        to="api.user",
                    ),
                ),
            ],
            options={
                "db_table": "search_history",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["-created_at"], name="search_hist_created_e154e6_idx"
                    ),
                    models.Index(
                        fields=["user"], name="search_hist_user_id_24152d_idx"
                    ),
                    models.Index(
                        fields=["user_identifier"],
                        name="search_hist_user_id_e4ac15_idx",
                    ),
                ],
            },
        ),
    ]
