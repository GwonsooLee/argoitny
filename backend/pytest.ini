[pytest]
# Django settings module - use test settings with SQLite
DJANGO_SETTINGS_MODULE = config.settings_test

# Python paths
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery patterns
testpaths = tests

# Output options
addopts =
    --verbose
    --strict-markers
    --tb=short
    --nomigrations
    --cov=api
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-branch
    --maxfail=5

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    external_api: marks tests that call external APIs (mock by default)

# Coverage options
[coverage:run]
source = api
omit =
    */migrations/*
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
precision = 2
skip_empty = True

[coverage:html]
directory = htmlcov
